---
import '../styles/global.css';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article' | 'profile';
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
}

const { 
  title, 
  description, 
  image = '/austin-cole-og.jpg',
  type = 'website',
  publishedTime,
  modifiedTime,
  author = 'Austin Cole'
} = Astro.props;

const siteTitle = title ? `${title} - Austin Cole` : 'Austin Cole';
const siteDescription = description || 'Austin Cole - Deputy IT Director, CISO, Emergency Management Leader, Ham Radio Operator, and ITDRC volunteer from Genesee, Idaho';
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImage = new URL(image, Astro.site);
---

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>{siteTitle}</title>
<meta name="description" content={siteDescription}>
<meta name="author" content={author}>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL}>

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type}>
<meta property="og:url" content={canonicalURL}>
<meta property="og:title" content={siteTitle}>
<meta property="og:description" content={siteDescription}>
<meta property="og:image" content={socialImage}>
<meta property="og:site_name" content="Austin Cole">
<meta property="og:locale" content="en_US">
{publishedTime && <meta property="article:published_time" content={publishedTime}>}
{modifiedTime && <meta property="article:modified_time" content={modifiedTime}>}
{type === 'article' && <meta property="article:author" content={author}>}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image">
<meta property="twitter:url" content={canonicalURL}>
<meta property="twitter:title" content={siteTitle}>
<meta property="twitter:description" content={siteDescription}>
<meta property="twitter:image" content={socialImage}>
<meta property="twitter:creator" content="@austintcole">

<!-- Additional SEO -->
<meta name="robots" content="index, follow">
<meta name="googlebot" content="index, follow">
<meta name="theme-color" content="#2563eb">

<!-- Favicon and Icons -->
<link rel="icon" type="image/x-icon" href="/favicon.ico">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="192x192" href="/android-chrome-192x192.png">
<link rel="icon" type="image/png" sizes="512x512" href="/android-chrome-512x512.png">

<!-- JSON-LD Structured Data -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Person",
  "name": "Austin Cole",
  "jobTitle": "Deputy IT Director & Chief Information Security Officer",
  "worksFor": {
    "@type": "Organization",
    "name": "Latah County"
  },
  "url": "https://austincole.us",
  "sameAs": [
    "https://www.linkedin.com/in/austintcole/",
    "https://github.com/ATCUSA"
  ],
  "knowsAbout": [
    "Cybersecurity",
    "Information Technology",
    "Emergency Management",
    "Ham Radio",
    "ITDRC"
  ],
  "address": {
    "@type": "PostalAddress",
    "addressLocality": "Genesee",
    "addressRegion": "ID",
    "addressCountry": "US"
  }
}
</script>

<script is:inline>
    // Initialize theme - prevent FOUC (default to dark)
    const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: light)').matches) {
            return 'light';
        }
        return 'dark';
    })();
    
    if (theme === 'light') {
        document.documentElement.classList.remove('dark');
    } else {
        document.documentElement.classList.add('dark');
    }
    
    window.localStorage.setItem('theme', theme);
</script>
