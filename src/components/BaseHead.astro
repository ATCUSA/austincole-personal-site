---
export interface Props {
  title?: string;
  description?: string;
}

const { title, description } = Astro.props;
---

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>{title ? `${title} - Austin Cole` : 'Austin Cole'}</title>
<meta name="description" content={description || 'Austin Cole - Deputy IT Director, CISO, Emergency Management Leader, Ham Radio Operator, and ITDRC volunteer'}>

<!-- Favicon and Icons -->
<link rel="icon" type="image/x-icon" href="/favicon.ico">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="192x192" href="/android-chrome-192x192.png">
<link rel="icon" type="image/png" sizes="512x512" href="/android-chrome-512x512.png">

<link rel="stylesheet" href="/src/styles/global.css">
<script is:inline>
    // Initialize theme - prevent FOUC (default to dark)
    const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: light)').matches) {
            return 'light';
        }
        return 'dark';
    })();
    
    if (theme === 'light') {
        document.documentElement.classList.remove('dark');
    } else {
        document.documentElement.classList.add('dark');
    }
    
    window.localStorage.setItem('theme', theme);
</script>
