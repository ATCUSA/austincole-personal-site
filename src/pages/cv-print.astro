---
import { getCVData } from '../utils/cv';
import { formatDateRange } from '../types/cv';
import { Mail, Phone, MapPin, Radio } from '@lucide/astro';
import SocialButtons from '../components/SocialButtons.astro';

const cvData = getCVData();
const { personalInfo, experience, leadership, certifications, skills, competencies } = cvData;
---

<!DOCTYPE html>
<html lang="en" class="print">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CV - {personalInfo.name}</title>
    <meta name="description" content={`Professional CV and resume for ${personalInfo.name} - ${personalInfo.title}`}>
    <style>
        /* Print-optimized styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Times New Roman', Times, serif;
            font-size: 11pt;
            line-height: 1.4;
            color: #000;
            background: #fff;
            max-width: 8.5in;
            margin: 0 auto;
            padding: 0.5in;
            text-align: left;
        }

        .header {
            text-align: center;
            margin-bottom: 1em;
            border-bottom: 2px solid #000;
            padding-bottom: 0.5em;
        }

        .header h1 {
            font-size: 18pt;
            font-weight: bold;
            margin-bottom: 0.25em;
        }

        .header .title {
            font-size: 12pt;
            font-style: italic;
            margin-bottom: 0.5em;
        }

        .contact-info {
            display: flex;
            gap: 1.5em;
            flex-wrap: wrap;
            font-size: 0.9em;
            margin-top: 0.5em;
            align-items: center;
        }

        .contact-item {
            display: flex;
            align-items: center;
            gap: 0.4em;
        }

        .contact-button {
            display: flex;
            align-items: center;
            gap: 0.4em;
            padding: 0.3em 0.6em;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .social-buttons-wrapper {
            display: contents;
        }

        .section {
            margin-bottom: 1.2em;
            page-break-inside: avoid;
        }

        .section-title {
            font-size: 14pt;
            font-weight: bold;
            text-transform: uppercase;
            border-bottom: 1px solid #000;
            margin-bottom: 0.5em;
            padding-bottom: 0.1em;
        }

        .job, .competency-group, .leadership-group {
            margin-bottom: 1em;
            page-break-inside: avoid;
        }

        .job-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 0.25em;
        }

        .job-title {
            font-weight: bold;
            font-size: 11pt;
        }

        .job-company {
            font-style: italic;
        }

        .job-dates {
            font-size: 10pt;
            white-space: nowrap;
        }

        .responsibilities {
            list-style: none;
            margin-left: 0;
        }

        .responsibilities li {
            margin-bottom: 0.1em;
            text-indent: -1em;
            margin-left: 1em;
        }

        .responsibilities li::before {
            content: "• ";
            font-weight: bold;
        }

        .competency-title, .leadership-title {
            font-weight: bold;
            margin-bottom: 0.25em;
        }

        .competency-items {
            list-style: none;
            margin-left: 1em;
        }

        .competency-items li {
            margin-bottom: 0.1em;
            text-indent: -1em;
        }

        .competency-items li::before {
            content: "• ";
        }

        .certifications-list {
            list-style: none;
            margin-left: 0;
        }

        .certifications-list li {
            margin-bottom: 0.1em;
            text-indent: -1em;
            margin-left: 1em;
        }

        .certifications-list li::before {
            content: "• ";
        }

        .skills-category {
            margin-bottom: 0.5em;
        }

        .skills-category-title {
            font-weight: bold;
            margin-bottom: 0.1em;
        }

        .skills-list {
            font-size: 10pt;
            line-height: 1.3;
        }

        .two-column {
            display: flex;
            gap: 2em;
            page-break-inside: avoid;
        }

        .two-column > div {
            flex: 1;
        }

        /* Print-specific rules */
        @media print {
            * {
                -webkit-print-color-adjust: exact !important;
                color-adjust: exact !important;
            }
            
            body {
                padding: 0.3in;
                font-size: 10pt;
            }
            
            .section {
                page-break-inside: avoid;
                margin-bottom: 0.6em;
                orphans: 3;
                widows: 3;
            }
            
            .job {
                page-break-inside: avoid;
                orphans: 2;
                widows: 2;
            }
            
            /* Force competencies section to stay with next section */
            .section:nth-of-type(3) {
                page-break-after: avoid !important;
                margin-bottom: 0.3em !important;
                break-after: avoid !important;
            }
            
            /* Force experience section to stay with previous */
            .section:nth-of-type(4) {
                page-break-before: avoid !important;
                break-before: avoid !important;
                margin-top: 0 !important;
            }
            
            /* Make competencies more compact */
            .section:nth-of-type(3) .two-column {
                margin-bottom: 0.2em;
            }
            
            .section:nth-of-type(3) .competency-group {
                margin-bottom: 0.5em;
            }
            
            /* Reduce header spacing */
            .header {
                margin-bottom: 0.8em;
            }
            
            /* Print styles for buttons - convert to text */
            .contact-button {
                background: none !important;
                color: #333 !important;
                padding: 0 !important;
                border-radius: 0 !important;
                font-weight: normal !important;
            }
            
            /* Reduce summary spacing */
            .section:nth-of-type(2) {
                margin-bottom: 0.5em;
            }
        }

        @media screen {
            body {
                box-shadow: 0 0 10px rgba(0,0,0,0.1);
                margin: 2em auto;
                display: block;
                width: 8.5in;
                min-height: 11in;
            }
            
            .print-notice {
                position: fixed;
                top: 20px;
                right: 20px;
                background: #007acc;
                color: white;
                padding: 10px 20px;
                border-radius: 5px;
                font-family: Arial, sans-serif;
                font-size: 14px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.2);
                z-index: 1000;
            }
        }

        @media print {
            .print-notice {
                display: none;
            }
        }
    </style>
</head>
<body>
    <div class="print-notice">
        Press Ctrl+P (Cmd+P on Mac) to print or save as PDF
    </div>

    <header class="header">
        <h1>{personalInfo.name}</h1>
        <div class="title">{personalInfo.title}</div>
        <div class="contact-info">
            <span class="contact-item">
                <MapPin size={14} />
                {personalInfo.location}
            </span>
            <div class="social-buttons-wrapper">
                <SocialButtons 
                    linkedinUrl={personalInfo.linkedin} 
                    githubUrl={personalInfo.github}
                    variant="text"
                    size="sm"
                />
            </div>
            <span class="contact-item">
                <Radio size={14} />
                {personalInfo.hamRadio}
            </span>
        </div>
    </header>

    <section class="section">
        <h2 class="section-title">Professional Summary</h2>
        <p>{personalInfo.summary}</p>
    </section>

    <section class="section">
        <h2 class="section-title">Core Competencies</h2>
        <div class="two-column">
            {competencies.map((competency, index) => (
                <div class="competency-group" style={index >= Math.ceil(competencies.length / 2) ? 'display: none;' : ''}>
                    <div class="competency-title">{competency.title}</div>
                    <ul class="competency-items">
                        {competency.items.map((item) => (
                            <li>{item}</li>
                        ))}
                    </ul>
                </div>
            ))}
            <div>
                {competencies.slice(Math.ceil(competencies.length / 2)).map((competency) => (
                    <div class="competency-group">
                        <div class="competency-title">{competency.title}</div>
                        <ul class="competency-items">
                            {competency.items.map((item) => (
                                <li>{item}</li>
                            ))}
                        </ul>
                    </div>
                ))}
            </div>
        </div>
    </section>

    <section class="section">
        <h2 class="section-title">Professional Experience</h2>
        {experience.map((job) => (
            <div class="job">
                <div class="job-header">
                    <div>
                        <div class="job-title">{job.title}</div>
                        <div class="job-company">{job.company}</div>
                    </div>
                    <div class="job-dates">
                        {formatDateRange(job.startDate, job.endDate, job.current)}
                    </div>
                </div>
                <ul class="responsibilities">
                    {job.responsibilities.map((responsibility) => (
                        <li>{responsibility}</li>
                    ))}
                </ul>
            </div>
        ))}
    </section>

    <section class="section">
        <h2 class="section-title">Leadership & Volunteer Service</h2>
        <div class="two-column">
            {leadership.map((category, index) => (
                <div class="leadership-group" style={index >= Math.ceil(leadership.length / 2) ? 'display: none;' : ''}>
                    <div class="leadership-title">{category.category}</div>
                    {category.roles.map((role) => (
                        <div style="margin-bottom: 0.5em;">
                            <div style="font-weight: bold; font-size: 10pt;">{role.title}</div>
                            <div style="font-style: italic; font-size: 10pt;">{role.organization}</div>
                            {role.description && (
                                <div style="font-size: 9pt; margin-top: 0.1em;">{role.description}</div>
                            )}
                        </div>
                    ))}
                </div>
            ))}
            <div>
                {leadership.slice(Math.ceil(leadership.length / 2)).map((category) => (
                    <div class="leadership-group">
                        <div class="leadership-title">{category.category}</div>
                        {category.roles.map((role) => (
                            <div style="margin-bottom: 0.5em;">
                                <div style="font-weight: bold; font-size: 10pt;">{role.title}</div>
                                <div style="font-style: italic; font-size: 10pt;">{role.organization}</div>
                                {role.description && (
                                    <div style="font-size: 9pt; margin-top: 0.1em;">{role.description}</div>
                                )}
                            </div>
                        ))}
                    </div>
                ))}
            </div>
        </div>
    </section>

    <section class="section">
        <h2 class="section-title">Education & Certifications</h2>
        <div class="two-column">
            <div>
                <div class="competency-title">Professional Certifications</div>
                <ul class="certifications-list">
                    {certifications.map((cert) => (
                        <li>{cert}</li>
                    ))}
                </ul>
            </div>
            <div>
                <div class="competency-title">Technical Skills</div>
                <div class="skills-category">
                    <div class="skills-category-title">Systems & Infrastructure</div>
                    <div class="skills-list">{skills.systems.join(' • ')}</div>
                </div>
                <div class="skills-category">
                    <div class="skills-category-title">Security & Compliance</div>
                    <div class="skills-list">{skills.security.join(' • ')}</div>
                </div>
                <div class="skills-category">
                    <div class="skills-category-title">Specializations</div>
                    <div class="skills-list">{skills.specializations.join(' • ')}</div>
                </div>
            </div>
        </div>
    </section>
</body>
</html>
