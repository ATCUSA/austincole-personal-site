---
import Layout from '../layouts/Layout.astro';
import ConnectBlock from '../components/ConnectBlock.astro';
import TestimonialCard from '../components/TestimonialCard.astro';
import { MessageSquare, Star, Users } from '@lucide/astro';
import { personalInfo } from '../data/personal-info.ts';
import { getCollection } from 'astro:content';

// Get all testimonials and organize by category
const allTestimonials = await getCollection('testimonials');
const testimonialsByCategory = allTestimonials.reduce((acc, testimonial) => {
  const category = testimonial.data.category;
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push({
    name: testimonial.data.name,
    title: testimonial.data.title,
    company: testimonial.data.company,
    content: testimonial.body || '',
    initials: testimonial.data.initials
  });
  return acc;
}, {} as Record<string, Array<{name: string, title: string, company: string, content: string, initials?: string}>>);

// Sort by order field
Object.keys(testimonialsByCategory).forEach(category => {
  testimonialsByCategory[category].sort((a, b) => {
    const aTestimonial = allTestimonials.find(t => t.data.name === a.name && t.data.category === category);
    const bTestimonial = allTestimonials.find(t => t.data.name === b.name && t.data.category === category);
    return (aTestimonial?.data.order || 0) - (bTestimonial?.data.order || 0);
  });
});
---

<Layout title="Testimonials" description="What colleagues, friends, and community members say about Austin Cole's work in technology, emergency management, and community service.">
<div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Header -->
    <header class="text-center mb-12">
        <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4">
            Testimonials
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-300">
            What colleagues, friends, and community members say about my work
        </p>
    </header>

    <!-- Professional Testimonials -->
    <section class="mb-16" aria-labelledby="professional-testimonials-heading">
        <h2 id="professional-testimonials-heading" class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-8 text-center">
            Professional
        </h2>
        <div class={(testimonialsByCategory.professional || []).length === 1 ? 'testimonial-grid-centered' : 'testimonial-grid'}>
            {(testimonialsByCategory.professional || []).map((testimonial) => (
                <div class={(testimonialsByCategory.professional || []).length === 1 ? 'testimonial-item-centered' : ''}>
                    <TestimonialCard testimonial={testimonial} variant="professional" />
                </div>
            ))}
        </div>
    </section>

    <!-- Community & Volunteer Testimonials -->
    <section class="mb-16" aria-labelledby="community-testimonials-heading">
        <h2 id="community-testimonials-heading" class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-8 text-center">
            Community & Volunteer Work
        </h2>
        <div class={(testimonialsByCategory.community || []).length === 1 ? 'testimonial-grid-centered' : 'testimonial-grid'}>
            {(testimonialsByCategory.community || []).map((testimonial) => (
                <div class={(testimonialsByCategory.community || []).length === 1 ? 'testimonial-item-centered' : ''}>
                    <TestimonialCard testimonial={testimonial} variant="community" />
                </div>
            ))}
        </div>
    </section>

    <!-- Personal Testimonials -->
    {(testimonialsByCategory.personal && testimonialsByCategory.personal.length > 0) && (
        <section class="mb-16" aria-labelledby="personal-testimonials-heading">
            <h2 id="personal-testimonials-heading" class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-8 text-center">
                Personal
            </h2>
            <div class={testimonialsByCategory.personal.length === 1 ? 'testimonial-grid-centered' : 'testimonial-grid'}>
                {testimonialsByCategory.personal.map((testimonial) => (
                    <div class={testimonialsByCategory.personal.length === 1 ? 'testimonial-item-centered' : ''}>
                        <TestimonialCard testimonial={testimonial} variant="personal" />
                    </div>
                ))}
            </div>
        </section>
    )}

    <!-- Call to Action -->
    <section class="text-center mb-16">
        <div class="card max-w-2xl mx-auto bg-gradient-to-r from-brand-50 to-brand-100 dark:from-brand-900/20 dark:to-brand-800/20 border-brand-200 dark:border-brand-700">
            <div class="flex items-center justify-center gap-3 mb-4">
                <MessageSquare size={24} class="text-brand-600 dark:text-brand-400" />
                <h3 class="text-2xl font-bold text-gray-900 dark:text-gray-100">
                    Would You Like to Share a Testimonial?
                </h3>
                <Star size={24} class="text-brand-600 dark:text-brand-400" />
            </div>
            <p class="text-gray-600 dark:text-gray-300 mb-6">
                If we've worked together professionally, served in the community together, or you'd like to share your experience, I'd love to hear from you.
            </p>
        </div>
    </section>
</div>

<!-- Let's Connect Section -->
<ConnectBlock personalInfo={personalInfo} variant="full" showTitle={true} />
</Layout>
