---
import Layout from '../layouts/Layout.astro';
import ConnectBlock from '../components/ConnectBlock.astro';
import SkipLinks from '../components/SkipLinks.astro';
import { Mail, Radio, MapPin, Send } from '@lucide/astro';
import { personalInfo } from '../data/personal-info.ts';

const contactSkipLinks = [
  { href: '#main-content', label: 'Skip to main content' },
  { href: '#navigation', label: 'Skip to navigation' },
  { href: '#contact-form', label: 'Skip to contact form' }
];
---

<Layout title="Contact">
<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <!-- Header -->
    <div class="text-center mb-12">
        <h1 class="text-4xl md:text-6xl font-bold text-gray-900 dark:text-gray-100 mb-6">
            Get In Touch
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
            I'd love to hear from you. Whether it's a project collaboration, cybersecurity consultation, or just wanting to connect, feel free to reach out.
        </p>
    </div>

    <div class="grid grid-cols-1 items-start">
        <!-- Contact Form -->
        <div class="card order-1 lg:order-1">
            <h2 id="contact-form" class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6">
                Send a Message
            </h2>
            
            <form id="contactForm" class="space-y-6" novalidate role="form" aria-labelledby="contact-form-heading">
                <h2 id="contact-form-heading" class="sr-only">Contact form</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Name *
                        </label>
                        <input type="text" 
                               id="name" 
                               name="name" 
                               required
                               aria-describedby="name-error"
                               class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-brand-500 focus:border-brand-500 transition-colors duration-200"
                               placeholder="Your full name">
                        <div id="name-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden" data-error="name" role="alert">
                            Please enter your name
                        </div>
                    </div>
                    
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Email *
                        </label>
                        <input type="email" 
                               id="email" 
                               name="email" 
                               required
                               aria-describedby="email-error"
                               class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-brand-500 focus:border-brand-500 transition-colors duration-200"
                               placeholder="your@email.com">
                        <div id="email-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden" data-error="email" role="alert">
                            Please enter a valid email address
                        </div>
                    </div>
                </div>
                
                <div>
                    <label for="subject" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        Subject *
                    </label>
                    <select id="subject" 
                            name="subject" 
                            required
                            aria-describedby="subject-error"
                            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-brand-500 focus:border-brand-500 transition-colors duration-200">
                        <option value="">Select a subject</option>
                        <option value="cybersecurity">Cybersecurity Consultation</option>
                        <option value="emergency-mgmt">Emergency Management</option>
                        <option value="ham-radio">Ham Radio / ARES</option>
                        <option value="itdrc">ITDRC Volunteer Work</option>
                        <option value="project">Project Collaboration</option>
                        <option value="speaking">Speaking Engagement</option>
                        <option value="general">General Inquiry</option>
                        <option value="other">Other</option>
                    </select>
                    <div id="subject-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden" data-error="subject" role="alert">
                        Please select a subject
                    </div>
                </div>
                
                <div>
                    <label for="message" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        Message *
                    </label>
                    <textarea id="message" 
                              name="message" 
                              required
                              rows="6"
                              aria-describedby="message-error"
                              class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-brand-500 focus:border-brand-500 transition-colors duration-200"
                              placeholder="Tell me about your project, question, or how I can help..."></textarea>
                    <div id="message-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden" data-error="message" role="alert">
                        Please enter your message
                    </div>
                </div>

                <!-- Status Messages -->
                <div id="formStatus" class="hidden" role="status" aria-live="polite">
                    <div id="successMessage" class="p-4 bg-green-100 dark:bg-green-900/30 border border-green-200 dark:border-green-700 rounded-lg hidden">
                        <div class="flex items-center">
                            <span class="text-green-600 dark:text-green-400 text-lg mr-2">✅</span>
                            <span class="text-green-700 dark:text-green-300 font-medium">Message sent successfully!</span>
                        </div>
                        <p class="text-green-600 dark:text-green-400 text-sm mt-1" id="successText">
                            Thank you for your message. I'll get back to you soon.
                        </p>
                    </div>
                    
                    <div id="errorMessage" class="p-4 bg-red-100 dark:bg-red-900/30 border border-red-200 dark:border-red-700 rounded-lg hidden">
                        <div class="flex items-center">
                            <span class="text-red-600 dark:text-red-400 text-lg mr-2">❌</span>
                            <span class="text-red-700 dark:text-red-300 font-medium">Error sending message</span>
                        </div>
                        <p class="text-red-600 dark:text-red-400 text-sm mt-1" id="errorText">
                            Please try again or contact me directly via GitHub or LinkedIn.
                        </p>
                    </div>
                </div>

                <button type="submit" 
                        id="submitBtn"
                        class="w-full btn btn-primary text-lg py-3 flex items-center justify-center gap-2">
                    <Send size={20} />
                    <span id="submitText">Send Message</span>
                </button>
            </form>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm');
    const formStatus = document.getElementById('formStatus');
    const successMessage = document.getElementById('successMessage');
    const errorMessage = document.getElementById('errorMessage');
    const successText = document.getElementById('successText');
    const errorText = document.getElementById('errorText');
    const submitBtn = document.getElementById('submitBtn');
    const submitText = document.getElementById('submitText');

    // Clear validation errors
    function clearErrors() {
        const errorElements = document.querySelectorAll('[data-error]');
        errorElements.forEach(el => el.classList.add('hidden'));
        
        const inputs = form?.querySelectorAll('input, select, textarea');
        inputs?.forEach(input => {
            input.classList.remove('border-red-500');
        });
    }

    // Show validation errors
    function showErrors(errors) {
        errors.forEach(error => {
            const errorElement = document.querySelector(`[data-error="${error.field}"]`);
            const inputElement = document.querySelector(`[name="${error.field}"]`);
            
            if (errorElement) {
                errorElement.textContent = error.message;
                errorElement.classList.remove('hidden');
            }
            
            if (inputElement) {
                inputElement.classList.add('border-red-500');
            }
        });
    }

    // Set loading state
    function setLoading(loading) {
        if (loading) {
            submitBtn?.classList.add('opacity-50', 'cursor-not-allowed');
            submitBtn?.setAttribute('disabled', 'true');
            if (submitText) submitText.textContent = 'Sending...';
        } else {
            submitBtn?.classList.remove('opacity-50', 'cursor-not-allowed');
            submitBtn?.removeAttribute('disabled');
            if (submitText) submitText.textContent = 'Send Message';
        }
    }

    // Show status message
    function showStatus(type, message) {
        formStatus?.classList.remove('hidden');
        successMessage?.classList.add('hidden');
        errorMessage?.classList.add('hidden');
        
        if (type === 'success') {
            successMessage?.classList.remove('hidden');
            if (successText) successText.textContent = message;
        } else {
            errorMessage?.classList.remove('hidden');
            if (errorText) errorText.textContent = message;
        }
        
        formStatus?.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }

    // Form submission
    form?.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        clearErrors();
        setLoading(true);
        
        // Get form data
        const formData = new FormData(form);
        const data = {
            name: formData.get('name'),
            email: formData.get('email'),
            subject: formData.get('subject'),
            message: formData.get('message')
        };
        
        try {
            const response = await fetch('/api/contact', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            });
            
            const result = await response.json();
            
            if (result.success) {
                showStatus('success', result.message);
                form.reset(); // Clear the form
            } else {
                if (result.errors) {
                    showErrors(result.errors);
                } else {
                    showStatus('error', result.message || 'An error occurred while sending your message.');
                }
            }
        } catch (error) {
            console.error('Form submission error:', error);
            showStatus('error', 'An error occurred while sending your message. Please try again.');
        } finally {
            setLoading(false);
        }
    });
});
</script>
</Layout>
